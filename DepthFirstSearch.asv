function breadthFirstSearch_init()
    clc; clear; close all;              % Clear screen and variables
    G = map();                          % Load map for searching
    p = plot(G);                        % Plot mat
    init = 'Grand Forks'; goal = 'Dubuque';
    [queue, explored, ruta] = BFS(G.Edges, init, goal)

end

function [searchNode, explored, ruta] = BFS(T, init, goal)  
    searchNode{1,1} = {init};
    explored = {};
    N = size(T,1);
    ind = [1 2; 2 1];
    currentNode = 's';
    G=1;
    searchNode{2,1} = '';
    while ~strcmp(searchNode{1,1}, goal) | isempty(searchNode)
        currentNode = searchNode{1,1};
        flag1 = true;
        for i = 1 : 2
            for j = 1 : N
                isempty(explored)
                start = T(j,1).EndNodes{ind(1,i)}
                end1 = T(j,1).EndNodes{ind(2,i)}
                if(isempty(explored))
                    if isempty(explored) || ~strcmp(end1,explored{1,end})
                        G = 1;
                    else
                        G = 0;
                    end
                else
                    sz =size(explored);
                    szo = sz(2);
                    for k = 1 : szo
                        explored{1,k}
                        if ~strcmp(end1,explored{1,k})
                            G = 1;
                        else
                            G = 0;
                            break
                        end
                    end
                end
                if strcmp(currentNode, T(j,1).EndNodes{ind(1,i)}) && G
                    searchNode{1,end+1} = T(j,1).EndNodes{ind(2,i)};
                    searchNode{2,end} = currentNode;   
                    %flag1 = false;
                    break                        
                end                
                if flag1 == false
                    break
                end                
            end
            if flag1 == false
                break
            end 
        end
        explored{1,end+1} = char(searchNode{1,1});
        explored{2,end} = char(searchNode{2,1});
        searchNode(:,1) = [];
        explored{1,end}
        
    end
    explored{1,end+1} = goal;
    explored{2,end} = searchNode{2,1};
    ruta={};
    final=goal;
    sz =size(explored);
    szo = sz(2);
    flag = true;
    while flag == true
            for r = 1 : szo
                if strcmp(final, explored{1,r})               
                    ruta{end+1} = explored{1,r}
                    final =explored{2,r};
                    if strcmp(init, ruta(end))                        
                        flag=false;
                        break
                    end
                    break
                end
            end

        if flag == false
            break
        end
    end
    ruta = fliplr(ruta);
end


function G = map()
    s = [1 1 1 2 2 3 3 3 4 5 6 7 7  7  8  9  10 10 11 11 11 12 13 14 14 15 16];
    t = [2 3 4 5 8 4 5 6 6 7 7 9 10 11 10 12 11 13 12 13 14 15 16 15 16 17 17];
    w = [1 1 1 1 1 1 1 1 1 1 1 1 1  1  1  1  1  1  1  1  1  1  1  1  1  1  1];
    names = {'Grand Forks', 'Fargo', 'Bemidji', 'International Falls', ...
             'St. Cloud', 'Duluth', 'Minneapolis', 'Sioux Falls', 'Wausau', ...
             'Rochester', 'LaCrosse', 'Green Bay', 'Dubuque', 'Madison', ...
             'Milwaukee', 'Rockford', 'Chicago'};
    G = graph(s, t, [], names);
end